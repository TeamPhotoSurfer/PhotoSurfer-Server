# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: deploy

on:
  #   workflow_dispatch:

  push:
    branches: [develop, deploy-test]

jobs:
  build:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [17.3.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout source code.
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check Npm -v
        run: npm -v
      
      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "photosurfer-firebase-adminsdk-j0t18-cfad93f7a2.json"
          json: ${{ secrets.FIREBASE_JSON }}

      - name: create test env file
        working-directory: ./
        run: |
          pwd
          touch .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_DB=${{ secrets.DB_DB }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo JWT_ALGO=${{ secrets.JWT_ALGO }} >> .env
          echo S3_ACCESS_KEY=${{ secrets.S3_ACCESS_KEY }} >> .env
          echo S3_SECRET_KEY=${{ secrets.S3_SECRET_KEY }} >> .env
          echo BUCKET_NAME=${{ secrets.BUCKET_NAME }} >> .env
          echo AWSAccessKeyId=${{ secrets.AWSAccessKeyId }} >> .env
          echo AWSSecretKey=${{ secrets.AWSSecretKey }} >> .env
          
      - name: create fcm json file
        working-directory: ./
        run: |
          pwd
          touch .photosurfer-firebase-adminsdk-j0t18-cfad93f7a2.json
          echo ${{ secrets.FCM_JSON }} >> .photosurfer-firebase-adminsdk-j0t18-cfad93f7a2.json

      #       - name: test
      #         working-directory: ./
      #         run: |
      #           yarn
      #           yarn test
      - name: build server files
        working-directory: ./
        run: |
          yarn
          yarn run build
        #  rm .env
        #  touch .env
        #  echo PORT=${{ secrets.PORT }} >> .env
        #  echo DB_USER=${{ secrets.DB_USER }} >> .env
        #  echo DB_HOST=${{ secrets.DB_HOST }} >> .env
        #  echo DB_DB=${{ secrets.DB_DB }} >> .env
        #  echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
        #  echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
        #  echo JWT_ALGO=${{ secrets.JWT_ALGO }} >> .env
        #  echo S3_ACCESS_KEY=${{ secrets.S3_ACCESS_KEY }} >> .env
        #  echo S3_SECRET_KEY=${{ secrets.S3_SECRET_KEY }} >> .env
        #  echo BUCKET_NAME=${{ secrets.BUCKET_NAME }} >> .env
        #  echo AWSAccessKeyId=${{ secrets.AWSAccessKeyId }} >> .env
        #  echo AWSSecretKey=${{ secrets.AWSSecretKey }} >> .env

        # yarn run build

      - name: zip file
        run: zip -r ./$GITHUB_SHA.zip ./dist ./scripts ./appspec.yml ./.env ./paduckage.json

      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWSAccessKeyId }}
          aws-secret-access-key: ${{ secrets.AWSSecretKey }}
          aws-region: ap-northeast-2

      - name: upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://photosurfer-build/deploy/$GITHUB_SHA.zip

      - name: deploy with AWS codeDeploy
        run: aws deploy create-deployment
          --application-name photosurfer-codedeploy
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name GROUP
          --s3-location bucket=photosurfer-build,bundleType=zip,key=deploy/$GITHUB_SHA.zip
